---
version: '3'
services:

# START SERVICE hkvb/registry/traefik
  registry:
    image: ${VCW_REGISTRY}registry:2
    environment: []
    command: []
    volumes: [${VCW_STACK_GLOBAL_STACKPREFIX}_data_volume:/var/lib/registry]
    ports: [${REGISTRY_MODULE_REGISTRY_PORT}:5000]
    networks: [${VCW_STACK_GLOBAL_NETWORKGLOBAL}_overlay, ${VCW_STACK_GLOBAL_NETWORKLOCAL}_overlay]
    deploy:
      mode: replicated
      resources:
        limits:
          memory: '${REGISTRY_DEPLOY_RESOURCES_LIMITS_MEMORY}'
        reservations:
          memory: '${REGISTRY_DEPLOY_RESOURCES_RESERVATIONS_MEMORY}'

      labels: [traefik.enable=true,traefik.docker.network=${VCW_STACK_GLOBAL_NETWORKGLOBAL}_overlay,
      "traefik.http.middlewares.${VCW_STACK_GLOBAL_STACKPREFIX}_registry.stripprefix.prefixes=/${VCW_STACK_GLOBAL_URLPREFIX},/${VCW_STACK_GLOBAL_URLPREFIX}/",
      traefik.http.services.${VCW_STACK_GLOBAL_STACKPREFIX}_registry.loadbalancer.server.port=5000,
      traefik.http.routers.${VCW_STACK_GLOBAL_STACKPREFIX}_registry.middlewares=${VCW_STACK_GLOBAL_STACKPREFIX}_registry@docker,
      traefik.http.routers.${VCW_STACK_GLOBAL_STACKPREFIX}_registry.entrypoints=infometis,
      traefik.http.routers.${VCW_STACK_GLOBAL_STACKPREFIX}_registry.rule=PathPrefix("/${VCW_STACK_GLOBAL_URLPREFIX}")]
${REGISTRY_COMPOSE_EXTENSIONS}
# END SERVICE hkvb/registry/traefik

networks: {${VCW_STACK_GLOBAL_NETWORKGLOBAL}_overlay: { external: true }, ${VCW_STACK_GLOBAL_NETWORKLOCAL}_overlay: { external: true }}
volumes: {${VCW_STACK_GLOBAL_STACKPREFIX}_data_volume: { external: true }}
${VCW_STACK_GLOBAL_COMPOSE_EXTENSIONS}
